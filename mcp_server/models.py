# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T08:15:13+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, RootModel


class AmendmentDecision(Enum):
    NoDecision = 'NoDecision'
    Withdrawn = 'Withdrawn'
    Disagreed = 'Disagreed'
    NotMoved = 'NotMoved'
    Agreed = 'Agreed'


class AmendmentLine(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    hangingIndentation: Optional[str] = None
    imageType: Optional[str] = None
    indentation: Optional[int] = None
    isImage: Optional[bool] = None
    text: Optional[str] = None


class AmendmentType(Enum):
    EditLongTitle = 'EditLongTitle'
    EditBillBody = 'EditBillBody'
    AddClauseOrSchedule = 'AddClauseOrSchedule'
    DeleteClauseOrSchedule = 'DeleteClauseOrSchedule'


class BillAgent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[str] = None
    email: Optional[str] = None
    name: Optional[str] = None
    phoneNo: Optional[str] = None
    website: Optional[str] = None


class BillSortOrder(Enum):
    TitleAscending = 'TitleAscending'
    TitleDescending = 'TitleDescending'
    DateUpdatedAscending = 'DateUpdatedAscending'
    DateUpdatedDescending = 'DateUpdatedDescending'


class BillStageSitting(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    billId: Optional[int] = None
    billStageId: Optional[int] = None
    date: Optional[datetime] = None
    id: Optional[int] = None
    stageId: Optional[int] = None


class BillStageSittingSearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[BillStageSitting]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class BillTypeCategory(Enum):
    Public = 'Public'
    Private = 'Private'
    Hybrid = 'Hybrid'


class CommitteeHouse(Enum):
    Commons = 'Commons'
    Lords = 'Lords'
    Joint = 'Joint'


class Decision(Enum):
    All = 'All'
    NoDecision = 'NoDecision'
    Withdrawn = 'Withdrawn'
    Disagreed = 'Disagreed'
    NotMoved = 'NotMoved'
    Agreed = 'Agreed'


class House(Enum):
    All = 'All'
    Commons = 'Commons'
    Lords = 'Lords'
    Unassigned = 'Unassigned'


class Member(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    house: Optional[House] = None
    memberFrom: Optional[str] = None
    memberId: Optional[int] = None
    memberPage: Optional[str] = None
    memberPhoto: Optional[str] = None
    name: Optional[str] = None
    party: Optional[str] = None
    partyColour: Optional[str] = None


class NewsArticlesSummary(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    content: Optional[str] = None
    displayDate: Optional[datetime] = None
    id: Optional[int] = None
    title: Optional[str] = None


class NewsArticlesSummarySearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[NewsArticlesSummary]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class Organisation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None
    url: Optional[str] = None


class OriginatingHouse(Enum):
    All = 'All'
    Commons = 'Commons'
    Lords = 'Lords'


class ProblemDetails(BaseModel):
    detail: Optional[str] = None
    instance: Optional[str] = None
    status: Optional[int] = None
    title: Optional[str] = None
    type: Optional[str] = None


class Promoter(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    organisationName: Optional[str] = None
    organisationUrl: Optional[str] = None


class PublicationDocument(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contentLength: Optional[int] = None
    contentType: Optional[str] = None
    filename: Optional[str] = None
    id: Optional[int] = None


class PublicationLink(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contentType: Optional[str] = None
    id: Optional[int] = None
    title: Optional[str] = None
    url: Optional[str] = None


class PublicationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None


class PublicationTypeSearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[PublicationType]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class Sponsor(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    member: Optional[Member] = None
    organisation: Optional[Organisation] = None
    sortOrder: Optional[int] = None


class StageReference(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    house: Optional[House] = None
    id: Optional[int] = None
    name: Optional[str] = None


class StageReferenceSearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[StageReference]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class StageSummary(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    abbreviation: Optional[str] = None
    description: Optional[str] = None
    house: Optional[House] = None
    id: Optional[int] = None
    sessionId: Optional[int] = None
    sortOrder: Optional[int] = None
    stageId: Optional[int] = None
    stageSittings: Optional[List[BillStageSitting]] = None


class StageSummarySearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[StageSummary]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class BillStage(RootModel[List[int]]):
    root: List[int]


class BillStagesExcluded(RootModel[List[int]]):
    root: List[int]


class BillType1(RootModel[List[int]]):
    root: List[int]


class BillIds(RootModel[List[int]]):
    root: List[int]


class AmendmentMember(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    house: Optional[House] = None
    isLead: Optional[bool] = None
    memberFrom: Optional[str] = None
    memberId: Optional[int] = None
    memberPage: Optional[str] = None
    memberPhoto: Optional[str] = None
    name: Optional[str] = None
    party: Optional[str] = None
    partyColour: Optional[str] = None
    sortOrder: Optional[int] = None


class AmendmentSearchItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    amendmentId: Optional[int] = None
    amendmentPosition: Optional[str] = None
    amendmentType: Optional[AmendmentType] = None
    billId: Optional[int] = None
    billStageId: Optional[int] = None
    clause: Optional[int] = None
    decision: Optional[AmendmentDecision] = None
    lineNumber: Optional[int] = None
    marshalledListText: Optional[str] = None
    pageNumber: Optional[int] = None
    schedule: Optional[int] = None
    sponsors: Optional[List[AmendmentMember]] = None
    summaryText: Optional[List[str]] = None


class AmendmentSearchItemSearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[AmendmentSearchItem]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class Bill(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    agent: Optional[BillAgent] = None
    billId: Optional[int] = None
    billTypeId: Optional[int] = None
    billWithdrawn: Optional[datetime] = None
    currentHouse: Optional[House] = None
    currentStage: Optional[StageSummary] = None
    includedSessionIds: Optional[List[int]] = None
    introducedSessionId: Optional[int] = None
    isAct: Optional[bool] = None
    isDefeated: Optional[bool] = None
    lastUpdate: Optional[datetime] = None
    longTitle: Optional[str] = None
    originatingHouse: Optional[House] = None
    petitionInformation: Optional[str] = None
    petitioningPeriod: Optional[str] = None
    promoters: Optional[List[Promoter]] = None
    shortTitle: Optional[str] = None
    sponsors: Optional[List[Sponsor]] = None
    summary: Optional[str] = None


class BillPublication(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    displayDate: Optional[datetime] = None
    files: Optional[List[PublicationDocument]] = None
    house: Optional[House] = None
    id: Optional[int] = None
    links: Optional[List[PublicationLink]] = None
    publicationType: Optional[PublicationType] = None
    title: Optional[str] = None


class BillPublicationList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    billId: Optional[int] = None
    publications: Optional[List[BillPublication]] = None


class BillSummary(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    billId: Optional[int] = None
    billTypeId: Optional[int] = None
    billWithdrawn: Optional[datetime] = None
    currentHouse: Optional[House] = None
    currentStage: Optional[StageSummary] = None
    includedSessionIds: Optional[List[int]] = None
    introducedSessionId: Optional[int] = None
    isAct: Optional[bool] = None
    isDefeated: Optional[bool] = None
    lastUpdate: Optional[datetime] = None
    originatingHouse: Optional[House] = None
    shortTitle: Optional[str] = None


class BillSummarySearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[BillSummary]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class BillType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    category: Optional[BillTypeCategory] = None
    description: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None


class BillTypeSearchResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[BillType]] = None
    itemsPerPage: Optional[int] = None
    totalResults: Optional[int] = None


class Committee(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    category: Optional[str] = None
    house: Optional[CommitteeHouse] = None
    id: Optional[int] = None
    name: Optional[str] = None
    url: Optional[str] = None


class Publication(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    displayDate: Optional[datetime] = None
    files: Optional[List[PublicationDocument]] = None
    id: Optional[int] = None
    links: Optional[List[PublicationLink]] = None
    publicationType: Optional[PublicationType] = None
    title: Optional[str] = None


class AmendmentDetail(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    amendmentId: Optional[int] = None
    amendmentLines: Optional[List[AmendmentLine]] = None
    amendmentNote: Optional[str] = None
    amendmentPosition: Optional[str] = None
    amendmentType: Optional[AmendmentType] = None
    billId: Optional[int] = None
    billStageId: Optional[int] = None
    clause: Optional[int] = None
    decision: Optional[AmendmentDecision] = None
    explanatoryText: Optional[str] = None
    explanatoryTextPrefix: Optional[str] = None
    lineNumber: Optional[int] = None
    marshalledListText: Optional[str] = None
    pageNumber: Optional[int] = None
    schedule: Optional[int] = None
    sponsors: Optional[List[AmendmentMember]] = None


class BillStageDetails(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    abbreviation: Optional[str] = None
    committee: Optional[Committee] = None
    description: Optional[str] = None
    house: Optional[House] = None
    id: Optional[int] = None
    lastUpdate: Optional[datetime] = None
    nextStageBillStageId: Optional[int] = None
    previousStageBillStageId: Optional[int] = None
    sessionId: Optional[int] = None
    sortOrder: Optional[int] = None
    stageId: Optional[int] = None
    stageSittings: Optional[List[BillStageSitting]] = None


class BillStageSittingPublicationList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    publications: Optional[List[Publication]] = None
    sittingId: Optional[int] = None


class BillStagePublicationList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    billStageId: Optional[int] = None
    publications: Optional[List[Publication]] = None
    sittings: Optional[List[BillStageSittingPublicationList]] = None
